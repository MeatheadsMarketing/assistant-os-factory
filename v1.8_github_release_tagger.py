import streamlit as st
import subprocess
import os
import json
from datetime import datetime

st.set_page_config(page_title="📦 GitHub Release Tagger", layout="wide")
st.title("📦 Version + Changelog Generator")

repo_path = "/content/assistant-os-factory"
manifest_path = "/content/drive/MyDrive/assistant_markdown/zip_manifest.json"

st.markdown("Use this tool to create a GitHub release tag and changelog from your manifest.")

tag = st.text_input("Release Tag", "v1.0.0")
desc = st.text_area("Changelog Notes", "Initial launch with assistant generation, GPT enhancement, and ZIP export.")

# Optional: Generate changelog from manifest
if os.path.exists(manifest_path):
    with open(manifest_path) as f:
        data = json.load(f)
        lines = [f"- {item['title']} ({item['category']}) – score {item['score']}/5" for item in data]
        if st.button("📜 Generate Changelog From Manifest"):
            desc = "\n".join(lines)
            st.text_area("Autogenerated Notes", desc, height=200)

# Run release tagging
if st.button("🏷️ Create GitHub Tag and Release"):
    try:
        os.chdir(repo_path)
        subprocess.run(["git", "add", "."], check=True)
        subprocess.run(["git", "commit", "-m", f"📦 {tag} release"], check=True)
        subprocess.run(["git", "tag", "-a", tag, "-m", desc], check=True)
        subprocess.run(["git", "push"], check=True)
        subprocess.run(["git", "push", "origin", tag], check=True)
        st.success(f"✅ Tag `{tag}` created and pushed to GitHub.")
    except Exception as e:
        st.error(f"❌ Git error: {e}")
